package collection;

public class TIL2 {

	/*
	 컬렉션 프레임워크
	  - 프로그램 구현에 필요한 자료구조를 구현해 놓은 라이브러리
	  - java.util 패키지에 구현되어 있다
	  - 개발에 소요되는 시간을 절약하면서 최적화 된 알고리즘을 사용할 수 있다
	  - 여러 인터페이스와 구현 클래스 사용 방법을 이해해야한다
	  
	 Collection(단일 객체를 관리) 하위 : List(선형자료구조, 순서가 있다, 요소가 중복이 가능), Set(요소가 중복 불가, 유일한 데이터 관리, 순서가 상관없다)
	  - 하나의 개체를 관리하기 위한 메서드가 선언된 인터페이스
	  
	 List
	  - Collection 하위 인터페이스
	  - 객체를 순서에 따라 저장하고 관리하는데 필요한 메서드가 선언된 인터페이스
	  - 배열의 기능을 구현하기 위한 인터페이스
	  - ArrayList, Vector, LinkedList등이 많이 사용된다
	  - 멀티 쓰레드 상태에서 리소스에 대한 동기화가 필요한 경우 Vector를 사용한다
	  - 일반적으로 ArrayList를 많이 사용한다
	  - 동기화(synchronization) : 두개의 쓰레드가 동시에 하나의 리소스에 접근 할 때 순서를 맞추어서 데이터에 오류가 발생하지 않도록 한다
	 
	 Map(key, value) 하위 : Hashtable(동기화 지원), HashMap(동기화 지원X), TreeMap
	 
	 
	 */
}
