package exception;

public class TIL {
	
	/*
	 오류(Error)
	  - 컴파일 오류(compile error) : 프로그램 코드 작성 중 발생하는 문법적 오류
	  - 실행 오류(runtime error) : 실행 중인 프로그램이 의도 하지 않은 동작을 하거나(bug) 프로그램이 중지되는 오류
	  - 실행 오류 시 비정상 종료는 서비스 운영에 치명적이다
	  - 오류가 발생할 수 있는 경우에 로그(log)를 남겨 추후 이를 분석하여 원인을 찾는다
	  - 자바는 예외 처리를 통하여 프로그램의 비정상 종료를 막고 log를 남길 수 있다
	  
	 오류와 예외 클래스
	  - 시스템 오류(error) : 가상 머신에서 발생, 프로그래머가 처리 할 수 없다. 동적 메모리 없는 경우, 스택 오버 플로우 등
	  - 예외(Exception) : 프로그램에서 제어 할 수 있는 오류, 읽어 들이려는 파일이 존재하지 않는 경우, 네트웍 연결이 끊어진 경우 등
	  
	 try-with-resources문
	  - 리소스를 자동 해제 하도록 제공해주는 구문
	  - 자바7부터 제공
	  - close()를 명시적으로 호출하지 않아도 try{}블록에서 열린 리소스는 정상적인 경우, 예외 발생한 경우 모두 자동 해제된다
	  - 해당 리소스가 AutoCloseable을 구현 해야한다
	  - FileImputStream의 경우 AutoCloseable을 구현하고 있다
	  
	 예외 처리 미루기
	  - throws를 사용하여 예외처리 미루기
	  - 메서드 선언부에 throws를 추가
	  - 예외가 발생한 메서드에서 예외 처리를 하지 않고 이 메서드를 호출한 곳에서 예외 처리를 한다는 의미이다
	  - main()에서 throws를 사용하면 가상머신에서 처리된다
	  
	 */
}
